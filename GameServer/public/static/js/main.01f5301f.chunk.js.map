{"version":3,"sources":["serviceWorker.js","constants/user.constants.js","constants/lobby.constants.js","util/auth-header.js","stores/authentication.reducer.js","stores/index.js","stores/lobby.reducer.js","stores/users.reducer.js","util/store.js","services/user.service.js","services/lobby.service.js","actions/user.actions.js","actions/lobby.actions.js","components/GamePanel.js","components/LoginForm.js","components/UserInfoForm.js","components/Lobby.js","components/LobbyList.js","containers/App.js","containers/Lobby.js","containers/Game.js","index.js"],"names":["Boolean","window","location","hostname","match","userConstants","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_SUCCESS","GETALL_FAILURE","lobbyConstants","LOBBY_SUCCESS","LOBBY_FAILURE","authHeader","token","JSON","parse","localStorage","getItem","console","log","accessToken","Authorization","initialState","type","loggedIn","rootReducer","combineReducers","authentication","state","arguments","length","undefined","action","lobby","lobbyList","items","error","loggerMiddleware","createLogger","store","createStore","compose","applyMiddleware","thunkMiddleware","devToolsExtension","f","userService","login","username","password","requestOptions","headers","Content-Type","usernameOrEmail","axios","post","then","response","status","setItem","stringify","data","catch","logout","Promise","reject","removeItem","lobbyService","getlobby","get","userActions","dispatch","success","failure","lobbyActions","getGameLobby","GamePanel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clicked","url","_this2","_this$state","react_default","a","createElement","onClick","toggleOpened","react_new_window_default","onUnload","newWindowUnloaded","features","setState","prevState","Component","width","height","left","top","LoginForm","name","onSubmit","handleSubmit","htmlFor","className","value","onChange","handleChange","UserInfoForm","Lobby","_ref","LobbyList","lobbys","map","components_Lobby","key","master_user","room_name","App","bind","assertThisInitialized","e","_e$target","target","defineProperty","preventDefault","_this$state2","UserInfoForm_UserInfoForm","components_LoginForm","components_GamePanel","connect","components_LobbyList","query","queryString","search","Game","Head","container","res","rootElement","document","getElementById","ReactDOM","render","es","react_router_dom","react_router","exact","path","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01f5301f.chunk.js","sourcesContent":["// This optional code is used to register a services worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our services worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a services worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // services worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a services ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register services worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous services worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during services worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the services worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure services worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No services worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const userConstants = {\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n};\n","export const lobbyConstants = {\n    LOBBY_SUCCESS: 'LOBBY_SUCCESS',\n    LOBBY_FAILURE: 'LOBBY_FAILURE',\n};\n","export function authHeader() {\n    // return authorization header with jwt token\n\n    const token = JSON.parse(localStorage.getItem('accessToken'));\n    console.log('call','authHeader', token);\n    if (token && token.accessToken) {\n        return { 'Authorization': 'Bearer ' + token.accessToken };\n    } else {\n        return {};\n    }\n}","import {userConstants} from '../constants';\n\nlet token = localStorage.getItem('accessToken') ? localStorage.getItem('accessToken') : null;\nconst initialState = token ? {\n    type: userConstants.LOGIN_SUCCESS,\n    loggedIn: true,\n    token: token\n} : {\n    type: userConstants.LOGIN_FAILURE\n};\n\nexport function authentication(state = initialState, action) {\n    switch (action.type) {\n        case userConstants.LOGIN_SUCCESS:\n            return {\n                loggedIn: true,\n                token: action.token\n            };\n        case userConstants.LOGIN_FAILURE:\n            return {};\n        case userConstants.LOGOUT:\n            return {};\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux';\nimport {authentication} from './authentication.reducer';\nimport {lobby} from \"./lobby.reducer\";\nimport {token} from './users.reducer';\n\nconst rootReducer = combineReducers({\n    authentication,\n    lobby,\n    token\n});\n\nexport default rootReducer;\n","import {lobbyConstants} from \"../constants\";\n\n\nexport function lobby(state = [], action) {\n    console.log('reducer',state);\n    switch (action.type) {\n        case lobbyConstants.LOBBY_SUCCESS:\n            return action.lobbyList;\n        case lobbyConstants.LOBBY_FAILURE:\n            return [];\n        default:\n            return state\n    }\n}","import { userConstants } from '../constants';\n\nexport function token(state = {}, action) {\n\n    switch (action.type) {\n        case userConstants.GETALL_SUCCESS:\n            return {\n                items: action.token\n            };\n        case userConstants.GETALL_FAILURE:\n            return {\n                error: action.error\n            };\n        default:\n            return state\n    }\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\nimport rootReducer from '../stores';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(\n            thunkMiddleware,\n            loggerMiddleware\n        ),\n        window.devToolsExtension ? window.devToolsExtension() : f => f\n    )\n);","\nimport axios from 'axios';\nimport {authHeader} from '../util';\nimport {userConstants} from \"../constants\";\n\nexport const userService = {\n    login,\n    logout,\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        headers: {'Content-Type': 'application/json'},\n        \"usernameOrEmail\": username,\n        \"password\": password\n    };\n\n    return axios.post(`http://localhost:8080/api/auth/signin`, requestOptions)\n        .then(response => {\n            if (response.status === 200) {\n                console.log('user service', response);\n                localStorage.setItem('accessToken', JSON.stringify(response.data));\n                return response.data;\n            }\n        })\n        .catch(response => {\n            console.log('post error', response);\n            logout();\n            return Promise.reject(response);\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('accessToken');\n}","\nimport axios from 'axios';\nimport {authHeader} from '../util';\nimport {lobbyConstants} from \"../constants\";\n\nexport const lobbyService = {\n    getlobby\n};\n\nfunction getlobby() {\n    const requestOptions = {\n        headers: authHeader(),\n    };\n\n    console.log('getlobby request', requestOptions);\n    return axios.get(`http://localhost:4000/v1/room/list`, requestOptions)\n        .then(response => {\n            console.log('getlobby get',response.data);\n            return response.data;\n        })\n        .catch(response => {\n            console.log(response);\n        });\n}","import {userConstants} from '../constants';\nimport {userService} from '../services';\n\nexport const userActions = {\n    login,\n    logout\n};\n\n\nfunction login(username, password) {\n    return dispatch => {\n         userService.login(username, password)\n             .then(\n                token => {\n                    console.log('user actions', token);\n                    dispatch(success(token));\n                },\n                error => {\n                    console.log('user error', error);\n                    dispatch(failure(error));\n                }\n            );\n    };\n\n    function success(token) {\n        return {type: userConstants.LOGIN_SUCCESS, accessToken : token}\n    }\n\n    function failure(error) {\n        return {type: userConstants.LOGIN_FAILURE, error}\n    }\n}\n\n\nfunction logout() {\n    userService.logout();\n    return {type: userConstants.LOGOUT};\n}","import {lobbyConstants} from '../constants';\nimport {lobbyService} from '../services';\n\nexport const lobbyActions = {\n    getGameLobby\n};\n\nfunction getGameLobby() {\n    return dispatch => {\n        lobbyService.getlobby()\n            .then(\n                lobbyList => {\n                    console.log('loadLobby', 'success');\n                    dispatch(setLobby(lobbyList));\n                },\n                error => {\n                    console.log('loadLobby', 'error');\n                    dispatch(failure(error));\n                }\n            )\n    };\n\n    function setLobby(lobby) {\n        return {type: lobbyConstants.LOBBY_SUCCESS, lobbyList : lobby}\n    }\n\n    function failure(error) {\n        return {type: lobbyConstants.LOBBY_FAILURE, error}\n    }\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport NewWindow from 'react-new-window'\n\nclass GamePanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: false,\n            url: '/lobby',\n            token: ''\n        };\n    }\n\n    render() {\n        const {clicked, url} = this.state;\n        return (\n            <div>\n                <button onClick={() => this.toggleOpened()}>\n                    GameStart\n                </button>\n                {clicked && this.props.loggedIn &&\n                <NewWindow\n                    url={url}\n                    onUnload={() => this.newWindowUnloaded()}\n                    features={features}\n                />\n                }\n            </div>\n        );\n    }\n\n    toggleOpened() {\n        if(this.props.loggedIn) {\n            this.setState((prevState) => ({\n                clicked: !prevState.clicked\n            }))\n        }else {\n            console.log(\"please login\");\n        }\n    }\n\n    newWindowUnloaded() {\n        this.setState({clicked: false})\n    }\n}\n\nconst features = {\n    width: 1280,\n    height: 1280,\n    left: 0,\n    top: 0,\n};\n\n\nexport default GamePanel;","import React, {Component} from \"react\";\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <form name=\"form\" onSubmit={this.props.handleSubmit}>\n                <div>\n                    <label htmlFor=\"username\">Username</label>\n                    <input type=\"text\" className=\"form-control\" name=\"username\" value={this.props.username}\n                           onChange={this.props.handleChange}/>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" className=\"form-control\" name=\"password\" value={this.props.password}\n                           onChange={this.props.handleChange}/>\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary\">Login</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default LoginForm;","import React, {Component} from 'react';\n\nexport default class UserInfoForm extends Component{\n    render() {\n        return(\n            <h3>HI HI HI</h3>\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Lobby = ({ name }) => (\n    <li>\n        {name}\n    </li>\n)\n\n\nexport default Lobby","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Lobby from './Lobby'\n\nconst LobbyList = ({ lobbys }) => (\n    <ul>\n        {lobbys.map(lobby => (\n            <Lobby key={lobby.master_user} name={lobby.room_name} />\n        ))}\n    </ul>\n)\nexport default LobbyList;","import React, {Component} from 'react';\nimport {userActions} from '../actions';\nimport {connect} from 'react-redux';\nimport { GamePanel, LoginForm, UserInfoForm} from '../components';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleChange(e) {\n        const {name, value} = e.target;\n        this.setState({[name]: value});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const {username, password} = this.state;\n        const {dispatch} = this.props;\n        if (username && password) {\n            dispatch(userActions.login(username, password));\n        }\n    }\n    render() {\n        const {loggedIn} = this.props;\n        const {username, password} = this.state;\n        return (\n            <div>\n                { loggedIn ||localStorage.getItem('accessToken') ?\n                    <UserInfoForm/>:\n                    <LoginForm\n                        username={username}\n                        password={password}\n                        handleSubmit={this.handleSubmit}\n                        handleChange={this.handleChange}\n                    />\n                }\n                <GamePanel loggedIn={loggedIn}/>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const {loggedIn} = state.authentication;\n    return {\n        loggedIn\n    };\n}\n\nexport default connect(mapStateToProps)(App);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {lobbyActions} from '../actions';\nimport {LobbyList} from '../components';\n\nclass Lobby extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lobbyList: []\n        };\n\n        console.log('session Check', localStorage.getItem(\"accessToken\"));\n    }\n\n\n    componentDidMount() {\n        const {dispatch} = this.props;\n        dispatch(lobbyActions.getGameLobby());\n    }\n\n    render() {\n        const {lobbyList} = this.props;\n        console.log('Lobby render', lobbyList);\n        return (\n            <div>\n                <LobbyList lobbys={lobbyList}/>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n\n    return {\n        lobbyList: state.lobby\n    };\n}\n\nexport default connect(mapStateToProps)(Lobby);","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport queryString from 'query-string';\n\n// eslint-disable-next-line no-restricted-globals\nconst query = queryString.parse(location.search);\n\nclass Game extends Component {\n\n    constructor(props) {\n        super(props);\n        const container = query.container;\n        const requestOptions = {\n            headers: {\"Head\": container}\n        };\n        console.log('run Game', requestOptions);\n        axios.get('http://localhost', requestOptions)\n            .then(res=>console.log(res));\n\n    }\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>hi</h3>\n            </div>\n        )\n    }\n\n}\n\nfunction mapStateToProps(state) {\n\n}\n\nexport default connect(mapStateToProps)(Game);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\n\nimport App from \"./containers/App\";\nimport Lobby from \"./containers/Lobby\";\nimport Game from \"./containers/Game\";\n\nimport {store} from './util';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n\n            <Route exact path={\"/\"} component={App}/>\n            <Route path={\"/lobby\"} component={Lobby}/>\n\n            <Route path={\"/game\"} component={Game}/>\n\n        </BrowserRouter>\n    </Provider>,\n    rootElement\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about services workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}